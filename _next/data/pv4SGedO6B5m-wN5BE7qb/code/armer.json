{"pageProps":{"codeData":{"content":"<h1>Armer Driver</h1>\n<p><a href=\"https://qcr.github.io\"><picture><img alt=\"QUT Centre for Robotics Open Source\" src=\"https://github.com/qcr/qcr.github.io/raw/master/misc/badge.svg\"></picture></a>\n<a href=\"./LICENSE.txt\"><picture><img alt=\"License\" src=\"https://img.shields.io/github/license/qcr/armer\"></picture></a>\n<a href=\"https://github.com/qcr/armer/actions?query=workflow%3ABuild\"><picture><img alt=\"Build Status\" src=\"https://github.com/qcr/armer/workflows/Build/badge.svg?branch=master\"></picture></a>\n<a href=\"https://lgtm.com/projects/g/qcr/armer/context:python\"><picture><img alt=\"Language grade: Python\" src=\"https://img.shields.io/lgtm/grade/python/g/qcr/armer.svg?logo=lgtm&amp;logoWidth=18\"></picture></a>\n<a href=\"https://codecov.io/gh/qcr/armer\"><picture><img alt=\"codecov\" src=\"https://codecov.io/gh/qcr/armer/branch/master/graph/badge.svg?token=GERHR5QTOF\"></picture></a></p>\n<p><video autoplay=\"\" muted=\"\" loop=\"\" poster=\"/_next/static/images/armer_example-ff4e12b2ac663fa5fb394397d23d2681.webp\"><source src=\"/_next/static/images/armer_example-ff4e12b2ac663fa5fb394397d23d2681.webm\" type=\"video/webm\"><source src=\"/_next/static/images/armer_example-ff4e12b2ac663fa5fb394397d23d2681.mp4\" type=\"video/mp4\">image</video></p>\n<p><a href=\"https://qcr.github.io/armer/welcome.html\"><picture><img alt=\"Armer documentation can be found here\" src=\"https://github.com/qcr/armer/wiki/doclink.png\"></picture></a></p>\n<p><picture><img alt=\"image\" src=\"https://github.com/qcr/armer/wiki/blockdiagram.png\"></picture></p>\n<p>Armer aims to provide an interface layer between the hardware drivers of\na robotic arm giving the user control in several ways:</p>\n<ul>\n<li><a href=\"https://qcr.github.io/armer/set_joint_velocity.html\">Joint velocity\ncontrol</a></li>\n<li><a href=\"https://qcr.github.io/armer/set_joint_position.html\">Joint position\ncontrol</a></li>\n<li><a href=\"https://qcr.github.io/armer/set_joint_position.html\">End effector Cartesian velocity\ncontrol</a></li>\n<li><a href=\"https://qcr.github.io/armer/set_cartesian_position.html\">End effector Cartesian position\ncontrol</a></li>\n</ul>\n<p>In addition to a multiple control method layer, Armer is designed to\nbe a compatability layer allowing the user to use the same code\nacross different robotic platforms. Armer supports control for physical\nand simulated arms giving users the ability to develop even without\naccess to a physical manipulator.</p>\n<p>Below is a gif of 3 different simulated arms moving with the same cartesian velocity commands.</p>\n<p><video autoplay=\"\" muted=\"\" loop=\"\" poster=\"/_next/static/images/same_code_example-e585c9ddb224310e187eb1f77b34c527.webp\"><source src=\"/_next/static/images/same_code_example-e585c9ddb224310e187eb1f77b34c527.webm\" type=\"video/webm\"><source src=\"/_next/static/images/same_code_example-e585c9ddb224310e187eb1f77b34c527.mp4\" type=\"video/mp4\">image</video></p>\n<h2>Requirements</h2>\n<p>Several ROS action servers, topics and services are set up by Armer\nto enable this functionality. A summary of these can be found\n<a href=\"https://qcr.github.io/armer/API.html\">here</a>.</p>\n<p>Armer is built on the <a href=\"https://qcr.github.io/code/robotics-toolbox-python\">Python Robotics Toolbox\n(RTB)</a> and requires\na URDF loaded RTB model to calculate the required movement kinematics,\nRTB comes with browser based simulator\n<a href=\"https://qcr.github.io/code/swift/\">Swift</a> which Armer uses as an out of\nthe box simulator.</p>\n<p>Due to these supporting packages using Armer with a manipulator will\nrequire several requirements:</p>\n<h3>Software requirements</h3>\n<ul>\n<li><a href=\"https://www.python.org/\">Python</a> &gt;= 3.6</li>\n<li><a href=\"http://wiki.ros.org/noetic\">ROS Noetic</a> - <a href=\"https://robostack.github.io/\">RoboStack</a> can also be used (see below)</li>\n<li><a href=\"https://pypi.org/project/roboticstoolbox-python/\">Robotics Toolbox for\nPython</a></li>\n<li><a href=\"https://qcr.github.io/armer/add_qcr_repos.html\">QCR repos</a></li>\n<li>Chrome browser (for using Swift sim)</li>\n</ul>\n<h3>Robot specific requirements</h3>\n<ul>\n<li>ROS drivers with joint group velocity controllers (ros_control)</li>\n<li>Robotics Toolbox model or URDF (loaded as a robot_description parameter)</li>\n</ul>\n<h2>Installation</h2>\n<h3>Linux (Ubuntu 20.04)</h3>\n<p>Copy and paste the following code snippet into a terminal to create a\nnew catkin workspace and install Armer to it. Note this\nscript will also add the workspace to be sourced every time a bash\nterminal is opened. If <a href=\"https://robostack.github.io/\">RoboStack</a> is preferred, please follow the steps in the next section</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Install pip </span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> python3-pip\n\n<span class=\"token comment\"># Make the workspace and clone armer and armer_msgs packages</span>\n<span class=\"token function\">mkdir</span> -p ~/armer_ws/src <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> ~/armer_ws/src \n<span class=\"token function\">git</span> clone https://github.com/qcr/armer.git <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">git</span> clone https://github.com/qcr/armer_msgs \n\n<span class=\"token comment\"># Install all required packages</span>\npip <span class=\"token function\">install</span> -r ~/armer_ws/src/armer/requirements.txt\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span> <span class=\"token operator\">&amp;&amp;</span> rosdep <span class=\"token function\">install</span> --from-paths src --ignore-src -r -y \n\n<span class=\"token comment\"># Make and source the workspace </span>\ncatkin_make \n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source ~/armer_ws/devel/setup.bash\"</span> <span class=\"token operator\">&gt;&gt;</span> ~/.bashrc \n<span class=\"token builtin class-name\">source</span> ~/armer_ws/devel/setup.bash\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Installation complete!\"</span>\n</code></pre>\n<h3>macOS and Windows (10/11)</h3>\n<p>To enable easy use of ROS on these operating systems, it is recommended to use <a href=\"https://robostack.github.io/\">RoboStack</a>; note that ROS 1 (noetic) is recommended at this stage. Please ensure you have <a href=\"https://mamba.readthedocs.io/en/latest/installation.html\">mamba</a> installed before proceeding. Please follow all required steps for the <a href=\"https://robostack.github.io/\">RoboStack</a> install (as per their instructions) to enable the smoothest setup on your particular OS.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># --- Mamba Environment Setup --- #</span>\n<span class=\"token comment\"># Create and activate a new robostack (ros-env) environment</span>\nmamba create -n ros-env ros-noetic-desktop <span class=\"token assign-left variable\">python</span><span class=\"token operator\">=</span><span class=\"token number\">3.9</span> -c robostack-staging -c conda-forge --no-channel-priority --override-channels\nmamba activate ros-env\n\n<span class=\"token comment\"># Install some compiler packages</span>\nmamba <span class=\"token function\">install</span> compilers cmake pkg-config <span class=\"token function\">make</span> ninja\n\n<span class=\"token comment\"># FOR WINDOWS: Install the Visual Studio command prompt - if you use Visual Studio 2022</span>\nmamba <span class=\"token function\">install</span> vs2022_win-64\n\n<span class=\"token comment\"># --- ARMer Setup --- #</span>\n<span class=\"token comment\"># Make the armer workspace and clone in armer and armer_msgs packages</span>\n<span class=\"token comment\"># FOR LINUX/MACOS</span>\n<span class=\"token function\">mkdir</span> -p ~/armer_ws/src <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> ~/armer_ws/src \n<span class=\"token comment\"># FOR WINDOWS: Assumes you are in the home folder</span>\n<span class=\"token function\">mkdir</span> armer_ws<span class=\"token punctuation\">\\</span>src <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> armer_ws<span class=\"token punctuation\">\\</span>src\n<span class=\"token comment\"># Clone in armer and armer_msgs</span>\n<span class=\"token function\">git</span> clone https://github.com/qcr/armer.git <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">git</span> clone https://github.com/qcr/armer_msgs \n<span class=\"token comment\"># Install all required packages (into ros-env) - from current directory</span>\n<span class=\"token comment\"># FOR LINUX/MACOS</span>\npip <span class=\"token function\">install</span> -r armer/requirements.txt\n<span class=\"token comment\"># FOR WINDOWS</span>\npip <span class=\"token function\">install</span> -r armer<span class=\"token punctuation\">\\</span>requirements.txt\n<span class=\"token comment\"># Enter armer_ws folder and run rosdep commands</span>\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span> <span class=\"token operator\">&amp;&amp;</span> rosdep init <span class=\"token operator\">&amp;&amp;</span> rosdep update <span class=\"token operator\">&amp;&amp;</span> rosdep <span class=\"token function\">install</span> --from-paths src --ignore-src -r -y \n\n<span class=\"token comment\"># Make and source the workspace (including environment)</span>\ncatkin_make \n\n<span class=\"token comment\"># --- Default Activation of Environment --- #</span>\n<span class=\"token comment\"># FOR LINUX </span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"mamba activate ros-env\"</span> <span class=\"token operator\">&gt;&gt;</span> ~/.bashrc\n\n<span class=\"token comment\"># FOR MACOS</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"mamba activate ros-env\"</span> <span class=\"token operator\">&gt;&gt;</span> ~/.bash_profile\n\n<span class=\"token comment\"># --- Workspace Source --- #</span>\n<span class=\"token builtin class-name\">source</span> ~/armer_ws/devel/setup.bash\n</code></pre>\n<h2>Supported Arms</h2>\n<p>Armer relies on the manipulator's ROS driver to communicate with the low level hardware so the the ROS drivers must be started along side Armer. <em><strong>NOTE: the below packages are required for control of a real robot - see below for simulation usage instructions</strong></em></p>\n<p>Currently Armer driver has packages that launches Armer and the target manipulator's drivers are bundled together. If your arm model has a hardware package, control should be a fairly plug and play experience. (An experience we are still working on so please let us know if it isn't.). Below are the github pages to arms with hardware packages. Install directions can be found on their respective pages.</p>\n<ul>\n<li>\n<p>[Available] Franka Panda: <a href=\"https://github.com/qcr/armer_panda\">https://github.com/qcr/armer_panda</a></p>\n</li>\n<li>\n<p>[Available] Universal Robot (UR3/UR5/UR10/UR10e): <a href=\"https://github.com/qcr/armer_ur\">https://github.com/qcr/armer_ur</a></p>\n</li>\n<li>\n<p>[In Progress] UFactory XArm (6): <a href=\"https://github.com/qcr/armer_xarm\">https://github.com/qcr/armer_xarm</a></p>\n</li>\n<li>\n<p>[In Progress] ABB IRB6700: <a href=\"https://github.com/qcr/armer_abb\">https://github.com/qcr/armer_abb</a></p>\n</li>\n</ul>\n<p>For more information on setting up manipulators not listed here see the Armer documentation, <a href=\"https://qcr.github.io/armer/supported_arms.html\">Supported Arms</a>.</p>\n<h2>Usage</h2>\n<p>The Armer interface can be launched with the following command for simulation (note, please replace USER with your own username):</p>\n<blockquote>\n<pre class=\"language-{.sourceCode\"><code class=\"language-{.sourceCode\"># Example is using the panda_sim.yaml. Note, please update the below path if the install directory is different\nroslaunch armer armer.launch config:=/home/$USER/armer_ws/src/armer/cfg/panda_sim.yaml\n</code></pre>\n</blockquote>\n<p>Alternatively, the Armer interface can be launched for a real robot using the following command (Note that this can also support simulation if you wish via the <em><strong>sim</strong></em> parameter):</p>\n<blockquote>\n<pre class=\"language-{.sourceCode\"><code class=\"language-{.sourceCode\"># Note this example launches the panda model in simulation mode (assumes you have this package cloned, see above)\nroslaunch armer_panda robot_bringup.launch sim:=true\n</code></pre>\n</blockquote>\n<p>After launching, an arm can be controlled in several ways. Some quick tutorials can be referenced below:</p>\n<ul>\n<li><a href=\"https://qcr.github.io/armer/set_joint_velocity.html\">Joint velocity\ncontrol</a></li>\n<li><a href=\"https://qcr.github.io/armer/set_joint_position.html\">Joint position\ncontrol</a></li>\n<li><a href=\"https://qcr.github.io/armer/set_joint_position.html\">End effector Cartesian velocity\ncontrol</a></li>\n<li><a href=\"https://qcr.github.io/armer/set_Cartesian_position.html\">End effector Cartesian position\ncontrol</a></li>\n<li><a href=\"https://qcr.github.io/armer/guarded_motion.html\">End effector Cartesian velocity control with guarded motion</a></li>\n</ul>\n<p>For more information and examples see the <a href=\"https://qcr.github.io/armer/\">Armer\ndocumentation</a></p>\n","name":"Armer Driver","type":"code","url":"https://github.com/qcr/armer","image":"https://github.com/qcr/armer/wiki/armer_example.gif","_images":["/_next/static/images/armer_example-ff4e12b2ac663fa5fb394397d23d2681.webm","/_next/static/images/armer_example-ff4e12b2ac663fa5fb394397d23d2681.mp4","/_next/static/images/armer_example-ff4e12b2ac663fa5fb394397d23d2681.webp","/_next/static/images/armer_example-ff4e12b2ac663fa5fb394397d23d2681.jpg"],"src":"/content/armer.md","id":"armer","image_position":"center"}},"__N_SSG":true}